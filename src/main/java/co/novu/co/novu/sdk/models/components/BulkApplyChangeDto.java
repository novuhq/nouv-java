/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package co.novu.co.novu.sdk.models.components;

import co.novu.co.novu.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class BulkApplyChangeDto {

    @JsonProperty("changeIds")
    private java.util.List<String> changeIds;

    @JsonCreator
    public BulkApplyChangeDto(
            @JsonProperty("changeIds") java.util.List<String> changeIds) {
        Utils.checkNotNull(changeIds, "changeIds");
        this.changeIds = changeIds;
    }

    @JsonIgnore
    public java.util.List<String> changeIds() {
        return changeIds;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public BulkApplyChangeDto withChangeIds(java.util.List<String> changeIds) {
        Utils.checkNotNull(changeIds, "changeIds");
        this.changeIds = changeIds;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BulkApplyChangeDto other = (BulkApplyChangeDto) o;
        return 
            java.util.Objects.deepEquals(this.changeIds, other.changeIds);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            changeIds);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BulkApplyChangeDto.class,
                "changeIds", changeIds);
    }
    
    public final static class Builder {
 
        private java.util.List<String> changeIds;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder changeIds(java.util.List<String> changeIds) {
            Utils.checkNotNull(changeIds, "changeIds");
            this.changeIds = changeIds;
            return this;
        }
        
        public BulkApplyChangeDto build() {
            return new BulkApplyChangeDto(
                changeIds);
        }
    }
}

