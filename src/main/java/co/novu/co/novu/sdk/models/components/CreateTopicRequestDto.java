/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package co.novu.co.novu.sdk.models.components;

import co.novu.co.novu.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class CreateTopicRequestDto {

    /**
     * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
     */
    @JsonProperty("key")
    private String key;

    /**
     * User defined custom name and provided by the user that will name the Topic created.
     */
    @JsonProperty("name")
    private String name;

    @JsonCreator
    public CreateTopicRequestDto(
            @JsonProperty("key") String key,
            @JsonProperty("name") String name) {
        Utils.checkNotNull(key, "key");
        Utils.checkNotNull(name, "name");
        this.key = key;
        this.name = name;
    }

    /**
     * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
     */
    @JsonIgnore
    public String key() {
        return key;
    }

    /**
     * User defined custom name and provided by the user that will name the Topic created.
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
     */
    public CreateTopicRequestDto withKey(String key) {
        Utils.checkNotNull(key, "key");
        this.key = key;
        return this;
    }

    /**
     * User defined custom name and provided by the user that will name the Topic created.
     */
    public CreateTopicRequestDto withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateTopicRequestDto other = (CreateTopicRequestDto) o;
        return 
            java.util.Objects.deepEquals(this.key, other.key) &&
            java.util.Objects.deepEquals(this.name, other.name);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            key,
            name);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateTopicRequestDto.class,
                "key", key,
                "name", name);
    }
    
    public final static class Builder {
 
        private String key;
 
        private String name;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
         */
        public Builder key(String key) {
            Utils.checkNotNull(key, "key");
            this.key = key;
            return this;
        }

        /**
         * User defined custom name and provided by the user that will name the Topic created.
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }
        
        public CreateTopicRequestDto build() {
            return new CreateTopicRequestDto(
                key,
                name);
        }
    }
}

