/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package co.novu.co.novu.sdk.models.operations;

import co.novu.co.novu.sdk.utils.SpeakeasyMetadata;
import co.novu.co.novu.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class TenantControllerUpdateTenantRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=identifier")
    private String identifier;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private co.novu.co.novu.sdk.models.components.UpdateTenantRequestDto updateTenantRequestDto;

    @JsonCreator
    public TenantControllerUpdateTenantRequest(
            String identifier,
            co.novu.co.novu.sdk.models.components.UpdateTenantRequestDto updateTenantRequestDto) {
        Utils.checkNotNull(identifier, "identifier");
        Utils.checkNotNull(updateTenantRequestDto, "updateTenantRequestDto");
        this.identifier = identifier;
        this.updateTenantRequestDto = updateTenantRequestDto;
    }

    @JsonIgnore
    public String identifier() {
        return identifier;
    }

    @JsonIgnore
    public co.novu.co.novu.sdk.models.components.UpdateTenantRequestDto updateTenantRequestDto() {
        return updateTenantRequestDto;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TenantControllerUpdateTenantRequest withIdentifier(String identifier) {
        Utils.checkNotNull(identifier, "identifier");
        this.identifier = identifier;
        return this;
    }

    public TenantControllerUpdateTenantRequest withUpdateTenantRequestDto(co.novu.co.novu.sdk.models.components.UpdateTenantRequestDto updateTenantRequestDto) {
        Utils.checkNotNull(updateTenantRequestDto, "updateTenantRequestDto");
        this.updateTenantRequestDto = updateTenantRequestDto;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TenantControllerUpdateTenantRequest other = (TenantControllerUpdateTenantRequest) o;
        return 
            java.util.Objects.deepEquals(this.identifier, other.identifier) &&
            java.util.Objects.deepEquals(this.updateTenantRequestDto, other.updateTenantRequestDto);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            identifier,
            updateTenantRequestDto);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TenantControllerUpdateTenantRequest.class,
                "identifier", identifier,
                "updateTenantRequestDto", updateTenantRequestDto);
    }
    
    public final static class Builder {
 
        private String identifier;
 
        private co.novu.co.novu.sdk.models.components.UpdateTenantRequestDto updateTenantRequestDto;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder identifier(String identifier) {
            Utils.checkNotNull(identifier, "identifier");
            this.identifier = identifier;
            return this;
        }

        public Builder updateTenantRequestDto(co.novu.co.novu.sdk.models.components.UpdateTenantRequestDto updateTenantRequestDto) {
            Utils.checkNotNull(updateTenantRequestDto, "updateTenantRequestDto");
            this.updateTenantRequestDto = updateTenantRequestDto;
            return this;
        }
        
        public TenantControllerUpdateTenantRequest build() {
            return new TenantControllerUpdateTenantRequest(
                identifier,
                updateTenantRequestDto);
        }
    }
}

