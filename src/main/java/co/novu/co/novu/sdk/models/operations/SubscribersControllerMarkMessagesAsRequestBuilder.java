/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package co.novu.co.novu.sdk.models.operations;

import co.novu.co.novu.sdk.models.errors.SDKError;
import co.novu.co.novu.sdk.utils.LazySingletonValue;
import co.novu.co.novu.sdk.utils.Options.Builder;
import co.novu.co.novu.sdk.utils.Options;
import co.novu.co.novu.sdk.utils.Utils;
import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapitools.jackson.nullable.JsonNullable;


public class SubscribersControllerMarkMessagesAsRequestBuilder {

    private String subscriberId;
    private co.novu.co.novu.sdk.models.components.MessageMarkAsRequestDto messageMarkAsRequestDto;
    private Optional<co.novu.co.novu.sdk.utils.RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallSubscribersControllerMarkMessagesAs sdk;

    public SubscribersControllerMarkMessagesAsRequestBuilder(SDKMethodInterfaces.MethodCallSubscribersControllerMarkMessagesAs sdk) {
        this.sdk = sdk;
    }

    public SubscribersControllerMarkMessagesAsRequestBuilder subscriberId(String subscriberId) {
        Utils.checkNotNull(subscriberId, "subscriberId");
        this.subscriberId = subscriberId;
        return this;
    }

    public SubscribersControllerMarkMessagesAsRequestBuilder messageMarkAsRequestDto(co.novu.co.novu.sdk.models.components.MessageMarkAsRequestDto messageMarkAsRequestDto) {
        Utils.checkNotNull(messageMarkAsRequestDto, "messageMarkAsRequestDto");
        this.messageMarkAsRequestDto = messageMarkAsRequestDto;
        return this;
    }
                
    public SubscribersControllerMarkMessagesAsRequestBuilder retryConfig(co.novu.co.novu.sdk.utils.RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public SubscribersControllerMarkMessagesAsRequestBuilder retryConfig(Optional<co.novu.co.novu.sdk.utils.RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public SubscribersControllerMarkMessagesAsResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.markAllAs(
            subscriberId,
            messageMarkAsRequestDto,
            options);
    }
}
