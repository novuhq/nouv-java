/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package co.novu.co.novu.sdk.models.operations;

import co.novu.co.novu.sdk.utils.SpeakeasyMetadata;
import co.novu.co.novu.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class IntegrationsControllerGetWebhookSupportStatusRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=providerOrIntegrationId")
    private String providerOrIntegrationId;

    @JsonCreator
    public IntegrationsControllerGetWebhookSupportStatusRequest(
            String providerOrIntegrationId) {
        Utils.checkNotNull(providerOrIntegrationId, "providerOrIntegrationId");
        this.providerOrIntegrationId = providerOrIntegrationId;
    }

    @JsonIgnore
    public String providerOrIntegrationId() {
        return providerOrIntegrationId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public IntegrationsControllerGetWebhookSupportStatusRequest withProviderOrIntegrationId(String providerOrIntegrationId) {
        Utils.checkNotNull(providerOrIntegrationId, "providerOrIntegrationId");
        this.providerOrIntegrationId = providerOrIntegrationId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IntegrationsControllerGetWebhookSupportStatusRequest other = (IntegrationsControllerGetWebhookSupportStatusRequest) o;
        return 
            java.util.Objects.deepEquals(this.providerOrIntegrationId, other.providerOrIntegrationId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            providerOrIntegrationId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(IntegrationsControllerGetWebhookSupportStatusRequest.class,
                "providerOrIntegrationId", providerOrIntegrationId);
    }
    
    public final static class Builder {
 
        private String providerOrIntegrationId;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder providerOrIntegrationId(String providerOrIntegrationId) {
            Utils.checkNotNull(providerOrIntegrationId, "providerOrIntegrationId");
            this.providerOrIntegrationId = providerOrIntegrationId;
            return this;
        }
        
        public IntegrationsControllerGetWebhookSupportStatusRequest build() {
            return new IntegrationsControllerGetWebhookSupportStatusRequest(
                providerOrIntegrationId);
        }
    }
}

