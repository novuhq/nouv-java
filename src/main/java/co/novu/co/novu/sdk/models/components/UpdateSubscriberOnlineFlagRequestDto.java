/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package co.novu.co.novu.sdk.models.components;

import co.novu.co.novu.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class UpdateSubscriberOnlineFlagRequestDto {

    @JsonProperty("isOnline")
    private boolean isOnline;

    @JsonCreator
    public UpdateSubscriberOnlineFlagRequestDto(
            @JsonProperty("isOnline") boolean isOnline) {
        Utils.checkNotNull(isOnline, "isOnline");
        this.isOnline = isOnline;
    }

    @JsonIgnore
    public boolean isOnline() {
        return isOnline;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UpdateSubscriberOnlineFlagRequestDto withIsOnline(boolean isOnline) {
        Utils.checkNotNull(isOnline, "isOnline");
        this.isOnline = isOnline;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateSubscriberOnlineFlagRequestDto other = (UpdateSubscriberOnlineFlagRequestDto) o;
        return 
            java.util.Objects.deepEquals(this.isOnline, other.isOnline);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            isOnline);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateSubscriberOnlineFlagRequestDto.class,
                "isOnline", isOnline);
    }
    
    public final static class Builder {
 
        private Boolean isOnline;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder isOnline(boolean isOnline) {
            Utils.checkNotNull(isOnline, "isOnline");
            this.isOnline = isOnline;
            return this;
        }
        
        public UpdateSubscriberOnlineFlagRequestDto build() {
            return new UpdateSubscriberOnlineFlagRequestDto(
                isOnline);
        }
    }
}

